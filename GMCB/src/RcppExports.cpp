// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Bridge
arma::sp_mat Bridge(const arma::mat& x, const arma::colvec& y, const double& q, const arma::colvec& lambda, const double& converge, const double& eta);
RcppExport SEXP _GMCB_Bridge(SEXP xSEXP, SEXP ySEXP, SEXP qSEXP, SEXP lambdaSEXP, SEXP convergeSEXP, SEXP etaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const double& >::type q(qSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< const double& >::type converge(convergeSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    rcpp_result_gen = Rcpp::wrap(Bridge(x, y, q, lambda, converge, eta));
    return rcpp_result_gen;
END_RCPP
}
// Prediction_Grid
arma::mat Prediction_Grid(const arma::mat& x_test, const arma::mat& x_train, const arma::vec& y_train, const arma::mat& grid_betas);
RcppExport SEXP _GMCB_Prediction_Grid(SEXP x_testSEXP, SEXP x_trainSEXP, SEXP y_trainSEXP, SEXP grid_betasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x_test(x_testSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_train(x_trainSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y_train(y_trainSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type grid_betas(grid_betasSEXP);
    rcpp_result_gen = Rcpp::wrap(Prediction_Grid(x_test, x_train, y_train, grid_betas));
    return rcpp_result_gen;
END_RCPP
}
// delta_to_matrix_inner_smn
arma::mat delta_to_matrix_inner_smn(arma::vec& delta, int q);
RcppExport SEXP _GMCB_delta_to_matrix_inner_smn(SEXP deltaSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(delta_to_matrix_inner_smn(delta, q));
    return rcpp_result_gen;
END_RCPP
}
// gmcb_mh_debug
List gmcb_mh_debug(const arma::mat& y, const arma::mat& x, const NumericVector& b_init, const NumericVector& d_init, const NumericVector& gamma_init, const double& alpha_b_init, const double& alpha_d_init, const NumericVector& gamma_prior, const NumericVector& alpha_prior, const NumericMatrix& lambda_prior, const NumericMatrix& tau_prior, const int& iter, const NumericVector& b_scale, const NumericVector& d_scale, const double& alpha_b_scale, const double& alpha_d_scale, const List& pos);
RcppExport SEXP _GMCB_gmcb_mh_debug(SEXP ySEXP, SEXP xSEXP, SEXP b_initSEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP alpha_b_initSEXP, SEXP alpha_d_initSEXP, SEXP gamma_priorSEXP, SEXP alpha_priorSEXP, SEXP lambda_priorSEXP, SEXP tau_priorSEXP, SEXP iterSEXP, SEXP b_scaleSEXP, SEXP d_scaleSEXP, SEXP alpha_b_scaleSEXP, SEXP alpha_d_scaleSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type b_init(b_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_b_init(alpha_b_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_init(alpha_d_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type lambda_prior(lambda_priorSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type tau_prior(tau_priorSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type b_scale(b_scaleSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type d_scale(d_scaleSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_b_scale(alpha_b_scaleSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_scale(alpha_d_scaleSEXP);
    Rcpp::traits::input_parameter< const List& >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(gmcb_mh_debug(y, x, b_init, d_init, gamma_init, alpha_b_init, alpha_d_init, gamma_prior, alpha_prior, lambda_prior, tau_prior, iter, b_scale, d_scale, alpha_b_scale, alpha_d_scale, pos));
    return rcpp_result_gen;
END_RCPP
}
// gmcb_mh_nodebug
List gmcb_mh_nodebug(const arma::mat& y, const arma::mat& x, const NumericVector& b_init, const NumericVector& d_init, const NumericVector& gamma_init, const double& alpha_b_init, const double& alpha_d_init, const NumericVector& gamma_prior, const NumericVector& alpha_prior, const NumericMatrix& lambda_prior, const NumericMatrix& tau_prior, const int& iter, const NumericVector& b_scale, const NumericVector& d_scale, const double& alpha_b_scale, const double& alpha_d_scale, const List& pos);
RcppExport SEXP _GMCB_gmcb_mh_nodebug(SEXP ySEXP, SEXP xSEXP, SEXP b_initSEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP alpha_b_initSEXP, SEXP alpha_d_initSEXP, SEXP gamma_priorSEXP, SEXP alpha_priorSEXP, SEXP lambda_priorSEXP, SEXP tau_priorSEXP, SEXP iterSEXP, SEXP b_scaleSEXP, SEXP d_scaleSEXP, SEXP alpha_b_scaleSEXP, SEXP alpha_d_scaleSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type b_init(b_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_b_init(alpha_b_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_init(alpha_d_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type lambda_prior(lambda_priorSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type tau_prior(tau_priorSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type b_scale(b_scaleSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type d_scale(d_scaleSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_b_scale(alpha_b_scaleSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_scale(alpha_d_scaleSEXP);
    Rcpp::traits::input_parameter< const List& >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(gmcb_mh_nodebug(y, x, b_init, d_init, gamma_init, alpha_b_init, alpha_d_init, gamma_prior, alpha_prior, lambda_prior, tau_prior, iter, b_scale, d_scale, alpha_b_scale, alpha_d_scale, pos));
    return rcpp_result_gen;
END_RCPP
}
// gmcb_mh_meanzero_debug
List gmcb_mh_meanzero_debug(const arma::mat& y, const NumericVector& d_init, const NumericVector& gamma_init, const double& alpha_d_init, const NumericVector& gamma_prior, const NumericVector& alpha_prior, const NumericMatrix& tau_prior, const int& iter, const NumericVector& d_scale, const double& alpha_d_scale, const List& pos);
RcppExport SEXP _GMCB_gmcb_mh_meanzero_debug(SEXP ySEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP alpha_d_initSEXP, SEXP gamma_priorSEXP, SEXP alpha_priorSEXP, SEXP tau_priorSEXP, SEXP iterSEXP, SEXP d_scaleSEXP, SEXP alpha_d_scaleSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_init(alpha_d_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type tau_prior(tau_priorSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type d_scale(d_scaleSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_scale(alpha_d_scaleSEXP);
    Rcpp::traits::input_parameter< const List& >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(gmcb_mh_meanzero_debug(y, d_init, gamma_init, alpha_d_init, gamma_prior, alpha_prior, tau_prior, iter, d_scale, alpha_d_scale, pos));
    return rcpp_result_gen;
END_RCPP
}
// gmcb_mh_meanzero_nodebug
List gmcb_mh_meanzero_nodebug(const arma::mat& y, const NumericVector& d_init, const NumericVector& gamma_init, const double& alpha_d_init, const NumericVector& gamma_prior, const NumericVector& alpha_prior, const NumericMatrix& tau_prior, const int& iter, const NumericVector& d_scale, const double& alpha_d_scale, const List& pos);
RcppExport SEXP _GMCB_gmcb_mh_meanzero_nodebug(SEXP ySEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP alpha_d_initSEXP, SEXP gamma_priorSEXP, SEXP alpha_priorSEXP, SEXP tau_priorSEXP, SEXP iterSEXP, SEXP d_scaleSEXP, SEXP alpha_d_scaleSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_init(alpha_d_initSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type tau_prior(tau_priorSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type d_scale(d_scaleSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_scale(alpha_d_scaleSEXP);
    Rcpp::traits::input_parameter< const List& >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(gmcb_mh_meanzero_nodebug(y, d_init, gamma_init, alpha_d_init, gamma_prior, alpha_prior, tau_prior, iter, d_scale, alpha_d_scale, pos));
    return rcpp_result_gen;
END_RCPP
}
// gmcb_smn_debug
List gmcb_smn_debug(const arma::mat& y, const arma::mat& x, const arma::rowvec& b_init, const arma::rowvec& d_init, const arma::rowvec& gamma_init, const double& alpha_b_init, const double& alpha_d_init, const arma::rowvec& lambda_init, const arma::rowvec& tau_init, const arma::vec& gamma_prior, const arma::vec& alpha_prior, const arma::mat& lambda_prior, const arma::mat& tau_prior, const int& iter, const double& alpha_b_scale, const double& alpha_d_scale, const List& pos);
RcppExport SEXP _GMCB_gmcb_smn_debug(SEXP ySEXP, SEXP xSEXP, SEXP b_initSEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP alpha_b_initSEXP, SEXP alpha_d_initSEXP, SEXP lambda_initSEXP, SEXP tau_initSEXP, SEXP gamma_priorSEXP, SEXP alpha_priorSEXP, SEXP lambda_priorSEXP, SEXP tau_priorSEXP, SEXP iterSEXP, SEXP alpha_b_scaleSEXP, SEXP alpha_d_scaleSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type b_init(b_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_b_init(alpha_b_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_init(alpha_d_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type lambda_init(lambda_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type tau_init(tau_initSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lambda_prior(lambda_priorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type tau_prior(tau_priorSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_b_scale(alpha_b_scaleSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_scale(alpha_d_scaleSEXP);
    Rcpp::traits::input_parameter< const List& >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(gmcb_smn_debug(y, x, b_init, d_init, gamma_init, alpha_b_init, alpha_d_init, lambda_init, tau_init, gamma_prior, alpha_prior, lambda_prior, tau_prior, iter, alpha_b_scale, alpha_d_scale, pos));
    return rcpp_result_gen;
END_RCPP
}
// gmcb_smn_nodebug
List gmcb_smn_nodebug(const arma::mat& y, const arma::mat& x, const arma::rowvec& b_init, const arma::rowvec& d_init, const arma::rowvec& gamma_init, const double& alpha_b_init, const double& alpha_d_init, const arma::rowvec& lambda_init, const arma::rowvec& tau_init, const arma::vec& gamma_prior, const arma::vec& alpha_prior, const arma::mat& lambda_prior, const arma::mat& tau_prior, const int& iter, const double& alpha_b_scale, const double& alpha_d_scale, const List& pos);
RcppExport SEXP _GMCB_gmcb_smn_nodebug(SEXP ySEXP, SEXP xSEXP, SEXP b_initSEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP alpha_b_initSEXP, SEXP alpha_d_initSEXP, SEXP lambda_initSEXP, SEXP tau_initSEXP, SEXP gamma_priorSEXP, SEXP alpha_priorSEXP, SEXP lambda_priorSEXP, SEXP tau_priorSEXP, SEXP iterSEXP, SEXP alpha_b_scaleSEXP, SEXP alpha_d_scaleSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type b_init(b_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_b_init(alpha_b_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_init(alpha_d_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type lambda_init(lambda_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type tau_init(tau_initSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type lambda_prior(lambda_priorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type tau_prior(tau_priorSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_b_scale(alpha_b_scaleSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_scale(alpha_d_scaleSEXP);
    Rcpp::traits::input_parameter< const List& >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(gmcb_smn_nodebug(y, x, b_init, d_init, gamma_init, alpha_b_init, alpha_d_init, lambda_init, tau_init, gamma_prior, alpha_prior, lambda_prior, tau_prior, iter, alpha_b_scale, alpha_d_scale, pos));
    return rcpp_result_gen;
END_RCPP
}
// gmcb_smn_meanzero_debug
List gmcb_smn_meanzero_debug(const arma::mat& y, const arma::rowvec& d_init, const arma::rowvec& gamma_init, const double& alpha_d_init, const arma::rowvec& tau_init, const arma::vec& gamma_prior, const arma::vec& alpha_prior, const arma::mat& tau_prior, const int& iter, const double& alpha_d_scale, const List& pos);
RcppExport SEXP _GMCB_gmcb_smn_meanzero_debug(SEXP ySEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP alpha_d_initSEXP, SEXP tau_initSEXP, SEXP gamma_priorSEXP, SEXP alpha_priorSEXP, SEXP tau_priorSEXP, SEXP iterSEXP, SEXP alpha_d_scaleSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_init(alpha_d_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type tau_init(tau_initSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type tau_prior(tau_priorSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_scale(alpha_d_scaleSEXP);
    Rcpp::traits::input_parameter< const List& >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(gmcb_smn_meanzero_debug(y, d_init, gamma_init, alpha_d_init, tau_init, gamma_prior, alpha_prior, tau_prior, iter, alpha_d_scale, pos));
    return rcpp_result_gen;
END_RCPP
}
// gmcb_smn_meanzero_nodebug
List gmcb_smn_meanzero_nodebug(const arma::mat& y, const arma::rowvec& d_init, const arma::rowvec& gamma_init, const double& alpha_d_init, const arma::rowvec& tau_init, const arma::vec& gamma_prior, const arma::vec& alpha_prior, const arma::mat& tau_prior, const int& iter, const double& alpha_d_scale, const List& pos);
RcppExport SEXP _GMCB_gmcb_smn_meanzero_nodebug(SEXP ySEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP alpha_d_initSEXP, SEXP tau_initSEXP, SEXP gamma_priorSEXP, SEXP alpha_priorSEXP, SEXP tau_priorSEXP, SEXP iterSEXP, SEXP alpha_d_scaleSEXP, SEXP posSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_init(alpha_d_initSEXP);
    Rcpp::traits::input_parameter< const arma::rowvec& >::type tau_init(tau_initSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type tau_prior(tau_priorSEXP);
    Rcpp::traits::input_parameter< const int& >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< const double& >::type alpha_d_scale(alpha_d_scaleSEXP);
    Rcpp::traits::input_parameter< const List& >::type pos(posSEXP);
    rcpp_result_gen = Rcpp::wrap(gmcb_smn_meanzero_nodebug(y, d_init, gamma_init, alpha_d_init, tau_init, gamma_prior, alpha_prior, tau_prior, iter, alpha_d_scale, pos));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_GMCB_Bridge", (DL_FUNC) &_GMCB_Bridge, 6},
    {"_GMCB_Prediction_Grid", (DL_FUNC) &_GMCB_Prediction_Grid, 4},
    {"_GMCB_delta_to_matrix_inner_smn", (DL_FUNC) &_GMCB_delta_to_matrix_inner_smn, 2},
    {"_GMCB_gmcb_mh_debug", (DL_FUNC) &_GMCB_gmcb_mh_debug, 17},
    {"_GMCB_gmcb_mh_nodebug", (DL_FUNC) &_GMCB_gmcb_mh_nodebug, 17},
    {"_GMCB_gmcb_mh_meanzero_debug", (DL_FUNC) &_GMCB_gmcb_mh_meanzero_debug, 11},
    {"_GMCB_gmcb_mh_meanzero_nodebug", (DL_FUNC) &_GMCB_gmcb_mh_meanzero_nodebug, 11},
    {"_GMCB_gmcb_smn_debug", (DL_FUNC) &_GMCB_gmcb_smn_debug, 17},
    {"_GMCB_gmcb_smn_nodebug", (DL_FUNC) &_GMCB_gmcb_smn_nodebug, 17},
    {"_GMCB_gmcb_smn_meanzero_debug", (DL_FUNC) &_GMCB_gmcb_smn_meanzero_debug, 11},
    {"_GMCB_gmcb_smn_meanzero_nodebug", (DL_FUNC) &_GMCB_gmcb_smn_meanzero_nodebug, 11},
    {NULL, NULL, 0}
};

RcppExport void R_init_GMCB(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
